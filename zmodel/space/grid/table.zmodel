
import "../../schema.zmodel"
import "../space.zmodel"
import "../../application"
import "grid"

enum TypeTableRequest {
    Aggregate
    GroupBy
    FindMany
}

model GridCardTable extends IdCreatedUpdatedAuth {
    parent           GridCard         @relation(fields: [parentId], references: [id], onDelete: Cascade)
    parentId         String           @unique

    type             Type
    typeTableRequest TypeTableRequest
    columns          String[]
    groupBy          GroupBy?

    @@allow('read', parent.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().currentSpaceIds && space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)]])
    @@allow('read', parent.element.gridTabContent.tabs.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().currentSpaceIds && space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)]])
}


model GroupBy extends IdCreatedUpdatedAuth {
    parent   GridCardTable @relation(fields: [parentId], references: [id], onDelete: Cascade)
    parentId String        @unique


    fields   String[]
    sum      String[]
    count    String[]
    avg      String[]
    min      String[]
    max      String[]
    orderBy  String?

    @@allow('read', parent.parent.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().currentSpaceIds && space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)]])
    @@allow('read', parent.parent.element.gridTabContent.tabs.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().currentSpaceIds && space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)]])
}
