
import "../../base"
import "../space"
import "../../application"
import "grid"

enum TypeTableRequest {
    findMany
    groupBy
    aggregate
}

model GridCardTable extends IdCreatedUpdatedAuth {
    parent           GridCard         @relation(fields: [parentId], references: [id], onDelete: Cascade)
    parentId         String           @unique

    type             Type
    typeTableRequest TypeTableRequest
    columns          String[]
    groupBy          GroupBy?
    chart            Chart?

    @@allow('read', parent.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().selectedSpaces && space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
    @@allow('read', parent.element.gridTabContent.tabs.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().selectedSpaces && space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
}


abstract model GridCardTableLink extends IdCreatedUpdatedAuth {

    parent   GridCardTable @relation(fields: [parentId], references: [id], onDelete: Cascade)
    parentId String        @unique
}

model GroupBy extends GridCardTableLink {
    fields  String[]
    sum     String[]
    count   String[]
    avg     String[]
    min     String[]
    max     String[]
    orderBy String?

    @@allow('read', parent.parent.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().selectedSpaces && space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
    @@allow('read', parent.parent.element.gridTabContent.tabs.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().selectedSpaces && space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
}

enum ChartType {
    BarChart
    PieChart
}

model Chart extends GridCardTableLink {
    type ChartType

    @@allow('read', parent.parent.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().selectedSpaces && space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
    @@allow('read', parent.parent.element.gridTabContent.tabs.element.grid.subTab.tab.folder.applicationVersion.activations?[spaceId in auth().selectedSpaces && space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
}
