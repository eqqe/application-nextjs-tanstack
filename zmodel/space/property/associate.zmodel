import "../../schema.zmodel"
import "../space.zmodel"
import "property"
import "lease"


abstract model PropertyOwnerLink extends Component {
    properties PropertyOwner[]

    @@allow('all', properties?[property.spaceId in auth().selectedSpaces && property.space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)]])
}


model Company extends Address, PropertyOwnerLink {
    name              String?
    siret             String?
    siren             String?
    codeNafApe        String?
    rcs               String?
    lei               String?
    intraCommunityVAT String?
    associates        CompanyAssociate[]
}

model Person extends PropertyOwnerLink, OptionalUser {
    birthDate  DateTime
    phone      String?
    associates Associate[]
    tenants    Tenant[]
    @@allow('all', associates?[companies?[company.associates?[company.properties?[property.spaceId in auth().selectedSpaces && property.space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)]]]]])
    @@allow('all', tenants?[lease.property.spaceId in auth().selectedSpaces &&  lease.property.space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)]])
}


model CompanyAssociate extends BaseAssociateLink, Component {
    company   Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)
    companyId String

    entryDate DateTime
    exitDate  DateTime?
}


model Associate extends Component {
    person    Person             @relation(fields: [personId], references: [id], onDelete: Cascade)
    personId  String
    companies CompanyAssociate[]
    @@allow('all', companies?[company.associates?[company.properties?[property.spaceId in auth().selectedSpaces && property.space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)]]]])
}

abstract model BaseAssociateLink {
    associate   Associate @relation(fields: [associateId], references: [id], onDelete: Cascade)
    associateId String

    @@allow('all', associate.companies?[company.associates?[company.properties?[property.spaceId in auth().selectedSpaces && property.space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)]]]])
}
