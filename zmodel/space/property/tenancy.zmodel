import "../../schema"
import "../space"
import "../person/person"
import "property"
import "lease"


abstract model PropertyTenancyLink extends Component {
    propertyTenancy PropertyTenancy?

    @@allow('all', propertyTenancy.spaceId in auth().selectedSpaces && propertyTenancy.space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)])
    @@allow('all', propertyTenancy.properties?[spaceId in auth().selectedSpaces && space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
}


model PropertyTenancyInCommon extends Address, PropertyTenancyLink {
    name              String?
    siret             String?
    siren             String?
    codeNafApe        String?
    rcs               String?
    lei               String?
    intraCommunityVAT String?
    tenants           PropertyTenancyInCommonTenant[]
}

model PropertyJointTenancy extends PropertyTenancyLink {
    tenants PropertyJointTenancyTenant[]
}

model PropertyTenancyByEntirety extends BasePerson, PropertyTenancyLink {
}

model PropertyTenancyInCommonTenant extends BasePerson, Component {
    propertyTenancyInCommon   PropertyTenancyInCommon @relation(fields: [propertyTenancyInCommonId], references: [id], onDelete: Cascade)
    propertyTenancyInCommonId String

    entryDate                 DateTime
    exitDate                  DateTime?

    @@allow('all', propertyTenancyInCommon.propertyTenancy.properties?[spaceId in auth().selectedSpaces && space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
}

model PropertyJointTenancyTenant extends BasePerson, Component {
    propertyJointTenancy   PropertyJointTenancy @relation(fields: [propertyJointTenancyId], references: [id], onDelete: Cascade)
    propertyJointTenancyId String


    @@allow('all', propertyJointTenancy.propertyTenancy.properties?[spaceId in auth().selectedSpaces && space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
}
