
import "../../schema.zmodel"
import "../space.zmodel"
import "associate"
import "lease"

enum PropertyType {
    APARTMENT
    HOUSE
    COMMERCIAL
}

abstract model Address {
    streetAddress String
    city          String
    postalCode    String
    country       String
    state         String?
}

model Property extends Address, SpaceComponent {
    propertyType PropertyType
    leases       Lease[]
    surface      Int
    charges      Charge[]
    owners       PropertyOwner[]
}

enum PropertyOwnerType {
    Company
    Person
}

abstract model PropertyComponent extends Component {

    property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
    propertyId String


    @@deny('all', property.private && property.owner != auth())
    @@allow('all', property.spaceId in auth().selectedSpaces && property.space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)])
}
model PropertyOwner extends PropertyComponent {
    type      PropertyOwnerType


    company   Company?          @relation(fields: [companyId], references: [id], onDelete: Cascade)
    companyId String?


    person    Person?           @relation(fields: [personId], references: [id], onDelete: Cascade)
    personId  String?

    @@allow('all', property.spaceId in auth().selectedSpaces && property.space.profiles?[users?[id == auth().id] && (role == ADMIN || role == USER)])
}



enum ChargeType {
    MAINTENANCE
    UTILITIES
    TAXES
    OTHER
}
model Charge  extends PropertyComponent {
    lease       Lease?     @relation(fields: [leaseId], references: [id], onDelete: Cascade)
    leaseId     String?
    chargeType  ChargeType
    amount      Int
    dueDate     DateTime
    description String?
}
