
import "../../schema.zmodel"
import "../space.zmodel"

model Dashboard extends SpaceComponent {
    panelRows     PanelRow[]
}

model PanelRow extends Component {
    dashboard        Dashboard      @relation(fields: [dashboardId], references: [id], onDelete: Cascade)
    dashboardId      String
    title       String    @length(1, 100)
    panels     Panel[]

    @@deny('all', dashboard.private && dashboard.owner != auth())
    @@allow('all', dashboard.space == auth().currentSpace && dashboard.space.members?[user == auth() && (profile.role == ADMIN || profile.role == USER)])
}


model Panel extends Component {
    panelRow        PanelRow      @relation(fields: [panelRowId], references: [id], onDelete: Cascade)
    panelRowId      String
    title       String    @length(1, 100)
    panelComponents     PanelComponent[]

    @@deny('all', panelRow.dashboard.private && panelRow.dashboard.owner != auth())
    @@allow('all', panelRow.dashboard.space == auth().currentSpace && panelRow.dashboard.space.members?[user == auth() && (profile.role == ADMIN || profile.role == USER)])
}

enum PanelComponentType {
    Counter
    Report
}
model PanelComponent extends Component {
    panel        Panel      @relation(fields: [panelId], references: [id], onDelete: Cascade)
    panelId      String
    title       String    @length(1, 100)
    type PanelComponentType


    counter PanelComponentCounter?
    report PanelComponentReport?

    @@deny('all', panel.panelRow.dashboard.private && panel.panelRow.dashboard.owner != auth())
    @@allow('all', panel.panelRow.dashboard.space == auth().currentSpace && panel.panelRow.dashboard.space.members?[user == auth() && (profile.role == ADMIN || profile.role == USER)])
}

abstract model PanelComponentRelation extends Component {
    panelComponent   PanelComponent @relation(fields: [panelComponentId], references: [id], onDelete: Cascade)
    panelComponentId String   @unique
    tableType Type

    @@deny('all', panelComponent.panel.panelRow.dashboard.private && panelComponent.panel.panelRow.dashboard.owner != auth())
    @@allow('all', panelComponent.panel.panelRow.dashboard.space == auth().currentSpace && panelComponent.panel.panelRow.dashboard.space.members?[user == auth() && (profile.role == ADMIN || profile.role == USER)])
}


enum PanelComponentCounterType
{
    Sum
    Count
}
model PanelComponentCounter extends PanelComponentRelation {
    type PanelComponentCounterType
}

enum PanelComponentReportType {
    Histogram
    Funel
}
model PanelComponentReport extends PanelComponentRelation {
    type PanelComponentReportType
}

