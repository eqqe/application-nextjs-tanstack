import "../../schema"
import "../space"
import "../property/property"
import "../property/lease"
import "../property/tenancy"


model Person extends Component, OptionalUser {
    birthDate         DateTime
    phone             String?
    leaseTenancies    LeaseTenant[]
    inCommonTenancies PropertyTenancyInCommonTenant[]
    jointTenancies    PropertyJointTenancyTenant[]
    entireTenancies   PropertyTenancyByEntirety[]
    corporations      Corporation[]

    @@allow('all', leaseTenancies?[lease.property.spaceId in auth().selectedSpaces &&  lease.property.space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]])
    @@allow('all', inCommonTenancies?[propertyTenancyInCommon.propertyTenancies?[property.spaceId in auth().selectedSpaces && property.space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]]])
    @@allow('all', jointTenancies?[propertyJointTenancy.propertyTenancies?[property.spaceId in auth().selectedSpaces && property.space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]]])
    @@allow('all', entireTenancies?[propertyTenancies?[property.spaceId in auth().selectedSpaces && property.space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]]])
    @@allow('all', corporations?[leaseTenants?[lease.property.spaceId in auth().selectedSpaces && lease.property.space.profiles?[users?[user.id == auth().id] && (role == ADMIN || role == USER)]]])
}



abstract model BasePerson {
    person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)
    personId String
}

