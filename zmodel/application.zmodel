import "schema"
import "space/space.zmodel"
import "space/view/view"
import "space/grid/grid"

model SpaceApplicationVersion extends IdCreatedUpdatedAuth {
    space          Space         @relation(fields: [spaceId], references: [id], onDelete: Cascade)
    spaceId        String
    applicationVersion    ApplicationVersion   @relation(fields: [applicationVersionId], references: [id], onDelete: Cascade)
    applicationVersionId  String

    @@unique([spaceId, applicationVersionId])

    @@allow('create,update,delete', space.members?[user == auth() && role == ADMIN])

    @@allow('read', space.members?[user == auth()])
}


model Application extends IdCreatedUpdatedAuth
{
    slug      String      @unique @regex('^[0-9a-zA-Z]{4,16}$')

    versions ApplicationVersion[]

    @@allow('read', auth() != null)
}

model ApplicationVersion extends IdCreatedUpdatedAuth
{
    application          Application         @relation(fields: [applicationSlug], references: [slug], onDelete: Cascade)
    applicationSlug        String

    versionMajor Int
    versionMinor Int

    @@unique([applicationSlug, versionMinor, versionMajor])
    activations SpaceApplicationVersion[]
    folders FolderApplicationVersion[]

    @@allow('read', auth() != null)
}

model FolderApplicationVersion extends IdCreatedUpdatedAuth
{
    applicationVersion          ApplicationVersion         @relation(fields: [applicationVersionId], references: [id], onDelete: Cascade)
    applicationVersionId        String
    tabs TabFolder[]

    path String
    @@allow('read', applicationVersion.activations?[space.members?[user == auth()]])
}

model TabFolder extends IdCreatedUpdatedAuth
{
    folder          FolderApplicationVersion         @relation(fields: [folderId], references: [id], onDelete: Cascade)
    folderId        String

    subTabs SubTabFolder[]
    @@allow('read', folder.applicationVersion.activations?[space.members?[user == auth()]])
}

model SubTabFolder extends IdCreatedUpdatedAuth
{
    tab          TabFolder         @relation(fields: [tabId], references: [id], onDelete: Cascade)
    tabId        String

    views View[]
    grids Grid[]
    @@allow('read', tab.folder.applicationVersion.activations?[space.members?[user == auth()]])
}


